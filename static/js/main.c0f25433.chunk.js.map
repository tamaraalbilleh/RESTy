{"version":3,"sources":["header.jsx","footer.jsx","if.jsx","Loader.js","form.jsx","result.jsx","history.jsx","App.jsx","index.js"],"names":["Header","className","Footer","If","props","condition","children","Loader","Form","handleInput","e","section","target","value","setState","handleClick","preventDefault","method","submitHandler","a","setTimeout","meth","ur","method2","url2","bod","JSON","stringify","body2","body","state","fetch","mode","headers","raw","flag","then","response","entries","pair","n","length","string","i","header","json","data","results","array","str","oldResult","parse","localStorage","getItem","Object","values","map","item","includes","push","setItem","count","handler","toggle","bind","Fragment","onSubmit","this","for","id","type","name","onChange","onClick","rows","cols","placeholder","React","Component","Result","console","log","History","hisClickHandler","array2","url","after","arr","split","App","afterSubmit","URL","componentDidMount","handleForm","handleHistory","historyHandler","fl","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c0f25433.chunk.js","sourcesContent":["import React from 'react';\nimport './header.scss';\n\nconst Header = ()=>{\n    return (\n        <header className=\"App-header\">\n            <h1> RESTy </h1>\n        </header>\n    )\n}\n\nexport default Header;","import React from 'react';\nimport './footer.scss';\nconst Footer = () =>{\n    return (\n        <footer className=\"App-footer\">&copy 2021 Tamara Amin</footer>\n    )\n}\n\nexport default Footer;","  \nconst If = (props) => {\n    if (props.condition) {\n        return props.children;\n    } else {\n        return null;\n    }\n}\nexport default If;","import './Loader.scss'\nfunction Loader () {\n    return (\n        <div className=\"laod\"></div>\n    );\n}\n\nexport default Loader;","import React from 'react';\nimport './form.scss';\nimport IF from \"./if\";\nimport Loader from \"./Loader\";\n\nclass Form extends React.Component{\n    constructor (props){\n        super (props);\n        this.state = {\n            section : 'http://localhost:3000',\n            method : 'GET',\n            body : {},\n            results :[],\n            flag : false,\n\n        }\n        this.submitHandler = this.submitHandler.bind(this);\n        this.toggle = this.toggle.bind (this)\n    }\n    handleInput = e =>{\n        let section = e.target.value;\n        this.setState ({section})\n    };\n\n    handleClick = e =>{\n        e.preventDefault ()\n        let method = e.target.value;\n        this.setState ({method})\n    }\n    submitHandler = async e =>{\n        e.preventDefault();\n        setTimeout(async () => {\n \n   \n        let raw;\n        let method2 ;\n        let url2 ;\n        let body2 ;\n        if (this.props.meth && this.props.ur){\n            method2 = this.props.meth;\n            url2 = this.props.ur;\n            if (this.props.bod){\n                body2 =await JSON.stringify(this.props.bod)\n\n            }else {\n                body2 = e.target.body.value\n            }\n            // console.log ('body after histoty1' , body2)\n                // input.value = url2\n           \n        }else {\n            method2 = this.state.method\n            url2= this.state.section\n            body2 =e.target.body.value\n          \n        }\n        if ((method2 === 'PUT' || method2 === 'POST') ){\n            raw = await fetch(url2 , {method : method2 , body :  body2 ,mode: \"cors\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },});\n        }else if (method2 === 'GET' || method2 === 'DELETE' ) {\n            \n            raw = await fetch(url2 , {method : method2});\n        }\n        \n        this.setState ({body :body2 , flag : !this.state.flag  })\n        let header= await fetch(url2).then((response) => {    \n            for (let pair of response.headers.entries()) {\n                let n = pair.length\n                let string = '';\n                for (let i =0;i<n;i++){\n                    if (i %2 === 0){\n                        string = string + pair[i] + ': ' + pair[i+1]\n                    }\n                }\n                return string;\n            }\n        }); \n    \n        \n        let data = await raw.json()\n        this.setState({ results: data, body: body2, flag: !this.state.flag});\n        let array = [];\n        if (data){\n            let str = `${this.state.method},${this.state.section},${body2}`\n            // console.log('this is the req',str)\n            let oldResult =JSON.parse(localStorage.getItem('request'))\n            if (oldResult){\n                // console.log ('these are old results' , oldResult)\n                Object.values(oldResult).map((item) => { /// keys\n                    if (!array.includes (item)){\n                        array.push (item)\n                    }\n                });\n            }\n            if (!array.includes(str)){\n                // console.log('inside for if ')\n                array.push (str)\n                // array.filter((item, index) => array.indexOf(item) === index)\n                    localStorage.setItem('request', JSON.stringify(array));\n            }\n          \n        }\n        // console.log ('headers', header)\n        // console.log ('data', data)\n        let results;\n        if (data.results){\n            results  = data.results;\n        }else {\n            results = data\n        }\n        let count;\n        if (data.count){    \n            count = data.count;\n        }else {\n            count = data.length\n        }\n       let flag = this.state.flag\n        this.props.handler(results, count ,header, array , flag);\n       \n        }, 3000);\n    }\n\n\n    toggle = ()=>{\n        this.setState ({flag  :! this.state.flag})\n    }\n\n    \n\n    render (){\n        return (\n            <React.Fragment>\n            <form onSubmit={this.submitHandler}>\n                <label for=\"url-input\">URL : </label>\n                <input id=\"inputs\"  type=\"text\" name=\"inputurl\" onChange={this.handleInput} />\n                <div id='formd'>\n            \n                <h4>{this.props.meth || this.state.method}  :  {this.props.ur || this.state.section} </h4>\n                <input id=\"submit\" type=\"submit\" value=\"Go!\"/><br/>\n                </div>\n\n                <IF condition={this.state.flag}>\n                    <Loader></Loader>\n                </IF>\n\n                <button id=\"get\" onClick={this.handleClick} value=\"GET\">GET</button>\n                <button id=\"post\" onClick={this.handleClick} value=\"POST\">POST</button>\n                <button id=\"put\" onClick={this.handleClick} value=\"PUT\">PUT</button>\n                <button id=\"delete\" onClick={this.handleClick} value=\"DELETE\">DELETE</button>\n                <textarea rows=\"4\" cols=\"50\" id=\"textarea\" name=\"body\"  placeholder=\"please enter a json body\"></textarea>\n            </form>\n           \n            </React.Fragment>\n        )\n    };\n    \n}\n\n\n\n\nexport default Form;","import React from 'react';\nimport JSONPretty from 'react-json-pretty';\nimport './result.scss';\nclass Result extends React.Component {\n    render (){\n    console.log ('props : ' , this.props)\n        return (\n            <React.Fragment>\n                <div id=\"results\"> results for your search : \n                    <p>Headers :</p> <JSONPretty id=\"json-pretty\" data= {this.props.header}></JSONPretty>\n                    <p>count is {this.props.count}</p>\n                    <p>Results : </p><JSONPretty id=\"json-pretty\" data={this.props.results}></JSONPretty> \n                </div>\n            </React.Fragment>\n        )\n    }\n}\nexport default Result;","import React from 'react';\nclass History extends React.Component {\n    constructor (props){\n        super (props)\n        this.hisClickHandler =this.hisClickHandler.bind(this);\n \n    }\n\n    hisClickHandler = e =>{\n        e.preventDefault ()\n        let array2 = []\n        let oldResult =JSON.parse(localStorage.getItem('request'))\n        if (oldResult){\n            Object.values(oldResult).map((item) => {\n                if (!array2.includes (item)){\n                    array2.push (item)\n                }\n            });\n            let meth = e.target.method.value;\n            let ur = e.target.url.value;\n            let bod = e.target.body.value;\n            \n            // this.props.historyHandler(meth, ur ,bod );\n            this.props.after (meth,ur,bod)\n\n    };\n}\n\n\n\n\n\n      \n      render (){\n          return (\n            <React.Fragment>\n        \n              <ul>\n                 {  \n                     this.props.arr.map(item=>{\n                      let str = item.split(',')\n                      let method = str[0];\n                      let url = str[1];\n                      let body;\n                      if (str[2]){\n\n                       body = str[2] \n                      }\n                      if (str.length > 3){\n                          for (let i = 3; i < str.length ; i ++){\n                              body = body + str[i]\n                          }\n                      }\n                      return (\n                          <React.Fragment>\n                          \n                          <form onSubmit={this.hisClickHandler}>\n                          <input type=\"hidden\" value={str[0]} name=\"method\"/>\n                          <input type=\"hidden\" value={str[1]} name=\"url\"/>\n                          <input type=\"hidden\" value={str[2] + str[3]} name=\"body\"/>\n                          <li><button type='submit'>{method}</button>   {url} , body is {body}</li>\n                          </form>\n                         \n                       \n                      \n                          </React.Fragment>\n\n                      )\n                     })\n                     \n                  }\n              </ul>\n            \n        </React.Fragment>\n                   \n         )          \n  \n    }\n}\n\n\n\nexport default History","import React from 'react';\nimport './App.scss';\nimport Header from './header'\nimport Footer from './footer'\nimport Form from './form'\nimport Result from './result'\nimport History from './history';\n\n\nclass App extends React.Component {\n  constructor (props){\n    super (props);\n    this.state = {\n      results : ['search result will appear here :'],\n      count : 0,\n      header : 'headers will be displayed here',\n      array : [],\n      method : '',\n      URL : '',\n      body : {},\n      flag : false,\n    }\n    this.handleForm = this.handleForm.bind(this);\n    this.handleHistory = this.handleHistory.bind (this);\n  }\n\n\n  handleForm (results,count, header , array , flag){\n    this.setState({ results, count  , header , array ,flag});\n  }\n\n  handleHistory(array, flag ){\n    this.setState ({...this.state, array : array, flag : flag })\n  };\n  afterSubmit = (method, URL , body)=>{\n    // console.log ('inside afterSubmit', this.state.URL)\n    this.setState ({method , URL , body})\n    \n  }\n\n  componentDidMount = ()=>{\n\n    let array = []\n      let oldResult =JSON.parse(localStorage.getItem('request'))\n      if (oldResult){\n        Object.values(oldResult).map((item) => {\n          if (!array.includes (item)){\n            array.push (item)\n          }\n        });\n      }\n    this.setState({array})\n\n  }\n\n  render(){\n    return(\n      <React.Fragment>\n      <Header/>\n      <main>\n      <History historyHandler={this.handleHistory} after={this.afterSubmit}   arr={this.state.array} flag={this.state.flag} />\n      <Form handler={this.handleForm}  meth= {this.state.method} ur={this.state.URL}  bod={this.state.body} fl={this.state.flag}/> \n      <Result results = {this.state.results} count={this.state.count} header={this.state.header}/>\n      </main>\n      <Footer/>\n      </React.Fragment>\n    )\n  }\n}\n\n\n\n// function App() {\n//   return (\n//     <React.Fragment>\n//       <Header/>\n//       <Form/>\n//       <Footer/>\n//     </React.Fragment>\n//   )\n// }\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}